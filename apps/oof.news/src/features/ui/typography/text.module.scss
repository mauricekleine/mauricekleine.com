@use "../mixins.scss";

.text {
  /* Colors */

  $colors: (
    "gray.100": var(--color-gray-100),
    "gray.200": var(--color-gray-200),
    "gray.300": var(--color-gray-300),
    "gray.400": var(--color-gray-400),
  );

  @each $color, $value in $colors {
    &[data-color="#{$color}"] {
      color: $value;
    }
  }

  /* Family */

  $family: (
    sans: var(--font-family-sans),
    serif: var(--font-family-serif),
  );

  @each $family, $value in $family {
    &[data-family="#{$family}"] {
      font-family: $value;
    }
  }

  /* Line heights */

  $line-heights: (
    tight: var(--line-height-tight),
    normal: var(--line-height-normal),
  );

  @each $line-height, $value in $line-heights {
    &[data-line-height="#{$line-height}"] {
      line-height: $value;
    }
  }

  /* Sizes */

  $sizes: (
    xs: var(--font-size-xs),
    sm: var(--font-size-sm),
    base: var(--font-size-base),
    lg: var(--font-size-lg),
    xl: var(--font-size-xl),
    2xl: var(--font-size-2xl),
  );

  @each $size, $value in $sizes {
    &[data-size~="base:#{$size}"] {
      font-size: $value;
    }
  }

  @each $breakpoint, $_ in mixins.$breakpoints {
    @include mixins.screen($breakpoint) {
      @each $size, $value in $sizes {
        &[data-size~="#{$breakpoint}:#{$size}"] {
          font-size: $value;
        }
      }
    }
  }

  /* Tracking */

  $tracking: (
    tight: var(--tracking-tight),
    normal: var(--tracking-normal),
  );

  @each $tracking, $value in $tracking {
    &[data-tracking="#{$tracking}"] {
      letter-spacing: $value;
    }
  }

  /* Transform */

  &[data-transform="uppercase"] {
    text-transform: uppercase;
  }

  /* Weights */

  $weights: (
    normal: var(--font-weight-normal),
    bold: var(--font-weight-bold),
  );

  @each $weight, $value in $weights {
    &[data-weight="#{$weight}"] {
      font-weight: $value;
    }
  }
}
