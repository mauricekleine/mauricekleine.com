@use "sass:map";
@use "../mixins.scss";

.text {
  /* Colors */

  $colors: (
    "gray.100": var(--color-gray-100),
    "gray.200": var(--color-gray-200),
    "gray.300": var(--color-gray-300),
    "gray.400": var(--color-gray-400),
  );

  @each $color, $value in $colors {
    &[data-color="#{$color}"] {
      color: $value;
    }
  }

  /* Family */

  $family: (
    sans: var(--font-family-sans),
    serif: var(--font-family-serif),
  );

  @each $family, $value in $family {
    &[data-family="#{$family}"] {
      font-family: $value;
    }
  }

  /* Sizes */

  $sizes: (
    xs: (
      font-size: var(--font-size-xs),
      line-height: var(--line-height-xs),
    ),
    sm: (
      font-size: var(--font-size-sm),
      line-height: var(--line-height-sm),
    ),
    base: (
      font-size: var(--font-size-base),
      line-height: var(--line-height-base),
    ),
    lg: (
      font-size: var(--font-size-lg),
      line-height: var(--line-height-lg),
    ),
    xl: (
      font-size: var(--font-size-xl),
      line-height: var(--line-height-xl),
    ),
    2xl: (
      font-size: var(--font-size-2xl),
      line-height: var(--line-height-2xl),
    ),
  );

  @each $size, $value in $sizes {
    &[data-size~="base:#{$size}"] {
      font-size: map.get($value, "font-size");
      line-height: map.get($value, "line-height");
    }
  }

  @each $breakpoint, $_ in mixins.$breakpoints {
    @include mixins.screen($breakpoint) {
      @each $size, $value in $sizes {
        &[data-size~="#{$breakpoint}:#{$size}"] {
          font-size: map.get($value, "font-size");
          line-height: map.get($value, "line-height");
        }
      }
    }
  }

  /* Tracking */

  $tracking: (
    tight: var(--tracking-tight),
    normal: var(--tracking-normal),
  );

  @each $tracking, $value in $tracking {
    &[data-tracking="#{$tracking}"] {
      letter-spacing: $value;
    }
  }

  /* Transform */

  &[data-transform="uppercase"] {
    text-transform: uppercase;
  }

  /* Weights */

  $weights: (
    normal: var(--font-weight-normal),
    bold: var(--font-weight-bold),
  );

  @each $weight, $value in $weights {
    &[data-weight="#{$weight}"] {
      font-weight: $value;
    }
  }
}
